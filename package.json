{
  "name": "ai-news-portal-backend",
  "version": "2.1.0",
  "description": "AI-powered hyperlocal news platform - Phase 2b: Intelligent RSS Pipeline",
  "author": "AI CTO",
  "license": "MIT",
  "type": "module",
  "scripts": {
    "start": "echo 'Use npm run deploy:all to deploy all workers'",
    "dev": "npm run dev:migrate",
    "dev:migrate": "wrangler dev scripts/migrate.js --name db-migrate-dev",
    "dev:auth": "wrangler dev workers/auth/auth-login.js --name auth-login-dev",
    "dev:content": "wrangler dev workers/content/content-list.js --name content-list-dev",
    
    "deploy": "npm run deploy:phase2b",
    "deploy:all": "npm run deploy:infra && npm run deploy:workers && npm run deploy:phase2b",
    "deploy:infra": "npm run deploy:migrate && npm run deploy:migrate:phase2b",
    "deploy:migrate": "wrangler deploy scripts/migrate.js --name db-migrate",
    "deploy:migrate:phase2b": "wrangler deploy scripts/migrate-phase2b.js --name db-migrate-phase2b",
    
    "deploy:workers": "npm run deploy:auth && npm run deploy:content && npm run deploy:admin && npm run deploy:newsletter && npm run deploy:ai",
    "deploy:auth": "wrangler deploy workers/auth/auth-login.js --name auth-login",
    "deploy:content": "npm run deploy:content:create && npm run deploy:content:list && npm run deploy:content:approve",
    "deploy:content:create": "wrangler deploy workers/content/content-create.js --name content-create",
    "deploy:content:list": "wrangler deploy workers/content/content-list.js --name content-list",
    "deploy:content:approve": "wrangler deploy workers/content/content-approve.js --name content-approve",
    "deploy:admin": "wrangler deploy workers/admin/admin-review-enhanced.js --name admin-review-queue",
    "deploy:newsletter": "wrangler deploy workers/newsletter/newsletter-signup.js --name newsletter-signup",
    
    "deploy:ai": "npm run deploy:ai:data && npm run deploy:ai:generation && npm run deploy:ai:automation",
    "deploy:ai:data": "npm run deploy:ai:prague && npm run deploy:ai:transport",
    "deploy:ai:prague": "wrangler deploy workers/ai/data-collect-prague.js --name data-collect-prague",
    "deploy:ai:transport": "wrangler deploy workers/ai/data-collect-dpp.js --name data-collect-dpp",
    "deploy:ai:generation": "npm run deploy:ai:generate && npm run deploy:ai:validate && npm run deploy:ai:score",
    "deploy:ai:generate": "wrangler deploy workers/ai/ai-generate-enhanced.js --name ai-generate-enhanced",
    "deploy:ai:validate": "wrangler deploy workers/ai/ai-validate-enhanced.js --name ai-validate-enhanced",
    "deploy:ai:score": "wrangler deploy workers/ai/ai-score.js --name ai-score",
    "deploy:ai:automation": "npm run deploy:ai:scheduler && npm run deploy:ai:auto-approve && npm run deploy:ai:batch",
    "deploy:ai:scheduler": "wrangler deploy workers/scheduler/scheduler-daily-enhanced.js --name scheduler-daily-enhanced",
    "deploy:ai:auto-approve": "wrangler deploy workers/content/content-auto-approve.js --name content-auto-approve",
    "deploy:ai:batch": "wrangler deploy workers/content/content-batch-approve.js --name content-batch-approve",

    "": "npm run deploy:phase2b:rss && npm run deploy:phase2b:ai && npm run deploy:phase2b:pipeline && npm run deploy:phase2b:enhanced",
    "deploy:phase2b:rss": "wrangler deploy workers/rss/rss-collect.js --name rss-collect",
    "deploy:phase2b:ai": "npm run deploy:phase2b:ai:score && npm run deploy:phase2b:ai:generate && npm run deploy:phase2b:ai:validate",
    "deploy:phase2b:ai:score": "wrangler deploy workers/ai/ai-data-score.js --name ai-data-score",
    "deploy:phase2b:ai:generate": "wrangler deploy workers/ai/ai-generate-enhanced.js --name ai-generate-enhanced",
    "deploy:phase2b:ai:validate": "wrangler deploy workers/ai/ai-validate-enhanced.js --name ai-validate-enhanced",
    "deploy:phase2b:pipeline": "npm run deploy:phase2b:publish && npm run deploy:phase2b:orchestrator",
    "deploy:phase2b:publish": "wrangler deploy workers/content/content-publish.js --name content-publish",
    "deploy:phase2b:orchestrator": "wrangler deploy workers/pipeline/pipeline-orchestrator.js --name pipeline-orchestrator",
    "deploy:phase2b:enhanced": "npm run deploy:phase2b:scheduler && npm run deploy:phase2b:admin",
    "deploy:phase2b:scheduler": "wrangler deploy workers/scheduler/scheduler-daily-enhanced.js --name scheduler-daily-enhanced",
    "deploy:phase2b:admin": "wrangler deploy workers/admin/admin-review-enhanced.js --name admin-review-enhanced",

    "db:status": "wrangler d1 execute ai-news-db --remote --command \"SELECT name FROM sqlite_master WHERE type='table';\"",
    "db:check": "wrangler d1 execute ai-news-db --remote --command \"SELECT COUNT(*) as content_count FROM content; SELECT COUNT(*) as user_count FROM users;\"",
    "db:reset": "echo 'WARNING: This will delete all data!' && wrangler d1 execute ai-news-db --remote --file schemas/reset.sql",
    "db:migrate": "curl -X POST https://db-migrate.jhaladik.workers.dev/",
    "db:migrate:phase2b": "curl -X POST https://db-migrate-phase2b.jhaladik.workers.dev/",
    "db:sample": "node scripts/create-sample-data.js",
    
    "test": "npm run test:phase2b",
    "test:all": "npm run test:workers && npm run test:phase2b && npm run test:pipeline",
    "test:workers": "node scripts/test-all-workers.js",
    "test:phase2b": "node scripts/test-phase2b.js",
    "test:pipeline": "npm run test:pipeline:collect && npm run test:pipeline:full",
    "test:pipeline:collect": "curl -X POST https://pipeline-orchestrator.jhaladik.workers.dev/ -H 'Content-Type: application/json' -d '{\"mode\":\"collect\"}'",
    "test:pipeline:full": "curl -X POST https://pipeline-orchestrator.jhaladik.workers.dev/ -H 'Content-Type: application/json' -d '{\"mode\":\"full\"}'",
    "test:rss": "curl -X POST https://rss-collect.jhaladik.workers.dev/",
    "test:ai:score": "curl -X POST https://ai-data-score.jhaladik.workers.dev/",
    "test:ai:validate": "curl -X POST https://ai-validate-enhanced.jhaladik.workers.dev/ -H 'Content-Type: application/json' -d '{\"content_text\":\"Prague transport update for residents\",\"category\":\"transport\"}'",
    
    "logs": "npm run logs:pipeline",
    "logs:all": "npm run logs:rss && npm run logs:ai && npm run logs:pipeline",
    "logs:rss": "wrangler tail rss-collect",
    "logs:ai": "wrangler tail ai-data-score",
    "logs:pipeline": "wrangler tail pipeline-orchestrator",
    "logs:scheduler": "wrangler tail scheduler-daily-enhanced",
    "logs:admin": "wrangler tail admin-review-enhanced",
    
    "pipeline:run": "curl -X POST https://pipeline-orchestrator.jhaladik.workers.dev/ -H 'Content-Type: application/json' -d '{\"mode\":\"full\"}'",
    "pipeline:collect": "curl -X POST https://rss-collect.jhaladik.workers.dev/",
    "pipeline:score": "curl -X POST https://ai-data-score.jhaladik.workers.dev/",
    "pipeline:status": "curl https://scheduler-daily-enhanced.jhaladik.workers.dev/",
    
    "admin:queue": "curl https://admin-review-enhanced.jhaladik.workers.dev/",
    "admin:insights": "curl https://admin-review-enhanced.jhaladik.workers.dev/?action=insights",
    "admin:stats": "curl https://admin-review-enhanced.jhaladik.workers.dev/?action=queue",
    
    "monitoring:health": "npm run monitoring:endpoints && npm run monitoring:database",
    "monitoring:endpoints": "node scripts/health-check-endpoints.js",
    "monitoring:database": "npm run db:check",
    
    "setup:phase2b": "npm run deploy:migrate:phase2b && npm run deploy:phase2b && npm run test:phase2b",
    "setup:cron": "wrangler triggers set scheduler-daily-enhanced --cron \"0 8,14,20 * * *\"",
    "setup:complete": "npm run setup:phase2b && npm run setup:cron && npm run pipeline:run",
    
    "status": "npm run status:workers && npm run status:database && npm run status:phase2b",
    "status:workers": "echo 'Checking Phase 2b workers...' && curl -s https://rss-collect.jhaladik.workers.dev/ > /dev/null && echo '✅ RSS Collect' || echo '❌ RSS Collect'",
    "status:database": "npm run db:status",
    "status:phase2b": "npm run status:phase2b:pipeline && npm run status:phase2b:ai",
    "status:phase2b:pipeline": "curl -s https://pipeline-orchestrator.jhaladik.workers.dev/ > /dev/null && echo '✅ Pipeline' || echo '❌ Pipeline'",
    "status:phase2b:ai": "curl -s https://ai-data-score.jhaladik.workers.dev/ > /dev/null && echo '✅ AI Score' || echo '❌ AI Score'",
    
    "quick-start": "./scripts/deploy-phase2b.sh",
    "quick-start:phase2b": "npm run setup:phase2b",
    
    "lint": "eslint workers/ scripts/ --ext .js",
    "format": "prettier --write workers/ scripts/ utils/",
    
    "docs:phase2b": "echo 'Phase 2b: Intelligent RSS Pipeline Documentation' && echo 'RSS Sources → AI Scoring → Generation → Validation → Publication'"
  },
  "devDependencies": {
    "eslint": "^8.57.0",
    "prettier": "^3.2.5"
  },
  "keywords": [
    "cloudflare",
    "workers",
    "ai",
    "rss",
    "news",
    "prague",
    "hyperlocal",
    "automation",
    "phase2b"
  ],
  "engines": {
    "node": ">=18.0.0"
  }
}